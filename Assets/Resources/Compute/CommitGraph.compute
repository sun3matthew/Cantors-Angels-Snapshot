// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

struct CommitNode
{
    float x;
    float y;
    int ParentIndex;
};

RWStructuredBuffer<CommitNode> nodes;

RWTexture2D<float4> Result;
int Resolution;

int BatchIdx;


[numthreads(8,8,8)]
void CSMain (uint3 id : SV_DispatchThreadID){
    int startIdx = BatchIdx + id.z * 8;

    for (int i = 0; i < 8; i++) {
        int circleIndex = startIdx + i;
        CommitNode node = nodes[circleIndex];
        if ((id.x - node.x) * (id.x - node.x) + (id.y - node.y) * (id.y - node.y) < 3 * 3) 
            Result[id.xy] = float4(1, 1, 1, 1);
    }
}